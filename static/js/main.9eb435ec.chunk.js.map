{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","shared/players.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","App.js","index.js"],"names":["Stats","props","totalScore","players","reduce","acc","player","score","totalPlayers","length","react_default","a","createElement","className","Stopwatch","state","isRunning","totalTime","tick","_this","setState","handleStart","handleReset","this","clockId","setInterval","clearInterval","timerID","onClick","Component","Header","components_Stats","title","components_Stopwatch","PLAYERS","name","id","isMax","Counter","changeScore","Icon","viewBox","d","transform","width","height","Player","removePlayer","components_Icon","max","components_Counter","AddPlayerForm","value","handleChange","event","target","handleSubmit","preventDefault","addPlayer","onSubmit","type","placeholder","onChange","App","setIsMax","prevState","map","maxScore","Object","assign","handleChangeScore","modifier","handleRemovePlayer","filter","p","handleAddPlayer","toConsumableArray","concat","Math","apply","maxElement","_this2","myPlayers","console","log","i","components_Header","components_Player","key","toString","setMax","components_AddPlayerForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9eb435ec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Stats = props => {\r\n\r\n  const totalScore = props.players.reduce((acc, player) => acc += player.score, 0);\r\n  const totalPlayers = props.players.length;\r\n\r\n  return (\r\n    <table className=\"stats\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Players:</td>\r\n          <td>{totalPlayers}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Total Points:</td>\r\n          <td>{totalScore}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Stopwatch extends Component {\r\n  \r\n  state = {\r\n    isRunning: false,\r\n    totalTime: 0\r\n  };\r\n\r\n  componentDidMount(){\r\n    //console.log('s-a urcat!');\r\n    this.clockId = setInterval(this.tick, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick = ()=>{\r\n    //console.log(\"cucu\");\r\n\r\n    if(this.state.isRunning){\r\n      this.setState({\r\n        totalTime: this.state.totalTime + 1 \r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  handleStart = () => {\r\n    this.setState(\r\n      { isRunning: !this.state.isRunning }\r\n      );    \r\n  }\r\n\r\n  handleReset = () => {\r\n    this.setState(\r\n      { \r\n        totalTime: 0,\r\n        isRunning: false\r\n       }\r\n      );    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <h2>Stopwatch</h2>\r\n        <span className=\"stopwatch-time\">{this.state.totalTime}</span>\r\n        <button onClick={ this.handleStart }>\r\n          {this.state.isRunning ? 'Stop' : 'Start' }\r\n        </button>\r\n        <button onClick={this.handleReset}>Reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stopwatch;\r\n","import React from 'react';\r\nimport Stats from './Stats';\r\nimport Stopwatch from \"./Stopwatch\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <Stats \r\n        players = { props.players } \r\n        />\r\n      <h1>{ props.title }</h1> \r\n      <Stopwatch /> \r\n    </header>\r\n    \r\n  );\r\n}\r\n\r\nexport default Header;\r\n","\r\nexport const PLAYERS = \r\n[\r\n  {\r\n    name: \"Guil\",\r\n    score: 0,\r\n    id: 0,\r\n    isMax:false\r\n  },\r\n  {\r\n    name: \"Treasure\",\r\n    score: 0,\r\n    id: 1,\r\n    isMax:false\r\n  },\r\n  {\r\n    name: \"Ashley\",\r\n    score: 0,\r\n    id: 2,\r\n    isMax:false\r\n  },\r\n  {\r\n    name: \"James\",\r\n    score: 0,\r\n    id: 3,\r\n    isMax:false\r\n  }\r\n];","import React from 'react';\r\n\r\nconst Counter = (props) => {\r\n  return (\r\n    <div className=\"counter\">\r\n      <button className=\"counter-action decrement\" onClick={() => props.changeScore(props.id, -1)}> - </button>\r\n      <span className=\"counter-score\">{ props.score }</span>\r\n      <button className=\"counter-action increment\" onClick={() => props.changeScore(props.id, 1)}> + </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n\r\n","import React, { Component } from 'react';\r\nclass Icon extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <svg viewBox=\"0 0 44 35\">\r\n              <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\r\n              <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\r\n            </svg>\r\n             );\r\n    }\r\n}\r\n \r\nexport default Icon;","\r\nimport React from \"react\";\r\nimport Counter from \"./Counter\";\r\nimport Icon from \"./Icon\"\r\nconst Player = props => {\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <span className=\"player-name\">\r\n        <button className=\"remove-player\" onClick={() => props.removePlayer(props.id)}>\r\n          âœ–\r\n        </button>\r\n        <Icon \r\n        max={props.isMax}\r\n      />\r\n        {props.name}\r\n      </span>\r\n      <Counter \r\n        score = {props.score}\r\n        changeScore = {props.changeScore} \r\n        id = {props.id}\r\n        />\r\n    </div>\r\n  );\r\n};\r\nexport default Player;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddPlayerForm extends Component {\r\n  state = { value: \"\" };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if(this.state.value){\r\n      this.props.addPlayer(this.state.value);\r\n      this.setState({value: \"\"});\r\n    }    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Add a new player\" \r\n          value={this.state.value} onChange={this.handleChange} \r\n          />\r\n        <input type=\"submit\" value=\"Add Player\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPlayerForm;","\r\nimport React, { Component } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport { PLAYERS } from \"./shared/players\";\r\nimport Player from \"./components/Player\";\r\nimport AddPlayerForm from \"./components/AddPlayerForm\";\r\nclass App extends Component {\r\n  state = { \r\n    players: PLAYERS\r\n  };\r\n\r\n  setIsMax=()=>{\r\n    this.setState(prevState=>({\r\n      players:prevState.players.map((player)=>{\r\n       if(player.score === this.state.players.maxScore){\r\n           return player;\r\n       }\r\n       else{\r\n         return Object.assign(player,{isMax:true});\r\n        }\r\n      })\r\n    }))\r\n  }\r\n  handleChangeScore = (id, modifier) => {\r\n    this.setIsMax();\r\n    // console.log(\"scorul este: \" + score);\r\n    this.setState(prevState => (\r\n      {\r\n        players: prevState.players.map( (player) => {\r\n          // dc e alt player decat cel cautat, returnez player-ul original\r\n          if (player.id !== id){  \r\n            return player\r\n          } \r\n          // dc e player-ul cautat, returnez player-ul cu proprietatea score modificata\r\n          else { \r\n            return Object.assign(player, {score: player.score + modifier}) \r\n          }\r\n        })\r\n      }\r\n    ))\r\n  }\r\n  handleRemovePlayer = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        players: prevState.players.filter(p => p.id !== id)\r\n      };\r\n    });\r\n  };\r\n  \r\n  handleAddPlayer = name => {\r\n    \r\n    // Genereaza un id nou, mai mare cu 1 fata de cel mai mare id din players,\r\n    // indiferent de cum evolueaza players  \r\n    const genUniqIncrId = () => 1 + Math.max(...this.state.players.map(player => player.id));    \r\n    this.setState(prevState => ({\r\n      players: [...prevState.players, { name, id: genUniqIncrId(), score: 0 }]\r\n    }));\r\n  };\r\n  \r\n  render() {\r\n\r\n    const myPlayers = this.state.players;\r\n    console.log(myPlayers);\r\n      \r\n    var maxElement;\r\n    var maxScore;\r\n      \r\n   maxScore = myPlayers[0].score;\r\n      \r\n      for(var i = 0 ; i < myPlayers.length; i++){\r\n        \r\n          if(maxScore < myPlayers[i].score){\r\n            maxScore = myPlayers[i].score;\r\n            maxElement = myPlayers[i].name;\r\n            \r\n        }\r\n      }\r\n      console.log(\"max score:\" + maxScore);\r\n      console.log(\"max element: \" + maxElement);\r\n\r\n\r\n    return (\r\n      <div className=\"scoreboard is-high-score\">\r\n        <Header title=\"Scoreboard\" players = {this.state.players} />\r\n        {/* Players list */}\r\n        {this.state.players.map(player => (\r\n          \r\n          <Player\r\n            name = {player.name}\r\n            id = {player.id}\r\n            key = {player.id.toString()}\r\n            removePlayer = {this.handleRemovePlayer}\r\n            changeScore = {this.handleChangeScore}\r\n            score = {player.score}\r\n            isMax={player.isMax}\r\n            setMax={this.setIsMax}\r\n          />\r\n        ))}\r\n        <AddPlayerForm addPlayer={this.handleAddPlayer} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}